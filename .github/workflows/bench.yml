name: GitHub Actions Benchmark

# TODO change to cron or push 
on:
  pull_request:

jobs:
  benchmark:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
      - name: Checkout gh-pages
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ hashFiles('project.clj') }}
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: DeLaGuardo/setup-clojure@e73bf2b6435244b2c9c5c226ae5022d91d0ce702
        with:
          lein: 2.9.4
      #- name: Docker
      #  run: |
      #    docker-compose -f containers/dev/docker-compose.yml up -d
      #    # Wait ES
      #    until curl http://127.0.0.1:9200/; do sleep 1; done
      #    # Wait Kafka
      #    until echo dump | nc 127.0.0.1 2181 | grep brokers; do sleep 1; done
      #- run: ./scripts/run-benchmarks.sh
      - run: |
          mkdir -p target/bench
          echo "test" > target/bench/test.edn
      - run: pwd
      - name: Upload benchmark results
        uses: actions/upload-artifact@v2
        with:
          retention-days: 30
          name: benchmark-results
          path: target/bench/*.edn
      - name: Copy benchmark results to gh-pages
        working-directory: gh-pages
        run: |
          git config --global user.name 'GitHub Actions'
          #git config --global user.email 'build@cisco.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          for attempt in $( seq 1 5 )
          do
            git pull --force origin
            git reset --hard
            mkdir -p bench
            ( set -x; cp "${GITHUB_WORKSPACE}/ctia/target/bench/*" bench || true )
            git add bench
            git status
            git commit --allow-empty -m "Upload benchmarks"
            if git push ; then
              break
            else
              ## TODO test this branch works
              ## TODO return failure error code if all attempts fail
              echo "Git push failed, trying (attempt ${attempt})"
              # exponential backoff
              sleep $(( 2 ** $attempt + $( seq 0 10 | sort -R | head -n 1 )))
              git reset --hard HEAD~1
            fi
          done
